[
    {
        "created": "20210206180940598",
        "text": "A handful of widgets are frequently useful but haven't been needed much or at all in this book thus far. Here is a quick introduction to each of them. For a full listing of all widgets, visit the [[appropriate page of the TiddlyWiki documentation|https://tiddlywiki.com/#Widgets]].\n\n\n!! `$count`\n\nThis is a shorter way of displaying the number of tiddlers that match a filter.\n\n{{Sn:CountWidget||MagicSnippet}}\n\n\n!! `$tiddler`\n\nSeveral times in passing, we've mentioned that the `$tiddler` widget is a friendly way of setting the current tiddler. In truth, it actually does a little more than just setting the `currentTiddler` variable would, by [[setting some variables to CSS classes appropriate to the new current tiddler|https://tiddlywiki.com/#TiddlerWidget]]. This is more esoterica than anything else, but on occasion having these correct might be important or useful.\n\n{{Sn:TiddlerWidget||MagicSnippet}}\n\n\n!! `$radio`\n\nThis allows you to create a ''radio button''. Radio buttons work much like the `$edit-text` widget and the `$checkbox` widget. You use them by listing several values the user can choose from in separate `$radio` widgets, and TiddlyWiki will decide which one to show as selected based on the value of the bound field.\n\nThe `tiddler` attribute defaults to the current tiddler, and the `field` attribute to `text`, but either can be set to something else if desired. Below, we bind our radio buttons to the `text` field of a temporary tiddler.\n\n{{Sn:RadioExample||MagicSnippet}}\n\nNote the use of `&nbsp;` and `&ensp;` to handle spacing. These are called [[HTML entities|https://developer.mozilla.org/en-US/docs/Glossary/Entity]], a way of writing characters that don't have keys on the keyboard or have special meaning in HTML. The former is a //non-breaking space// (the same width as a normal space, but the browser will prefer not to put a line break there, unless there is no other way to make the line fit on the screen), and the latter is an //en space// (longer than a normal space, the width of a lowercase //n//). A more flexible way to handle the spacing between the buttons would be using [[CSS rules|Stylesheets]], but spaces are often good enough.\n\n\n!! `$select`\n\nWhen you have more than a couple choices, you may wish to present them as a ''drop-down menu'' rather than as radio buttons. Let's rewrite the radio-buttons example to use a drop-down instead:\n\n{{Sn:SelectExample||MagicSnippet}}\n\nSometimes you might want to populate the drop-down menu dynamically, rather than listing out a number of options. This is easy to do with a `$list` widget:\n\n{{Sn:DynamicSelectExample||MagicSnippet}}\n\nYou can do something similar for radio buttons if you like, but it's more typical to use a drop-down when you aren't sure in advance what items will be in the list -- if at some point in the future there are unexpectedly 200 items rendering as radio buttons, your tiddler might be pretty hard to use!\n\n!! `$vars`\n\n`$vars` normally isn't useful anymore, but you are likely to encounter it in older wikitext, so it's good to know about. It's exactly the same thing as the `$let` widget, except  that it doesn't allow later variables named within the widget to refer to earlier ones.\n\n\n!! Exercises\n\n{{Ex:SetLetReplacement||ExerciseTemplate}}\n{{Ex:CountWidgetReplacement||ExerciseTemplate}}\n{{Ex:FamilyRadioButton||ExerciseTemplate}}\n{{Ex:ContactCard||ExerciseTemplate}}\n\n\n!! Takeaways\n\n{{||TakeawaysTemplate}}",
        "type": "text/vnd.tiddlywiki",
        "title": "Miscellaneous Widgets",
        "tags": "Section",
        "modified": "20241001121201636",
        "parent": "Tips and Tricks",
        "description": "A handful of widgets are frequently useful but haven't been needed or discussed in detail in this book thus far. "
    }
]
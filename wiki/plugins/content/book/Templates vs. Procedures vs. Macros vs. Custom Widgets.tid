created: 20200605153728555
description: Templates and macros share a surprising number of properties; a few guidelines may help you decide when to use one over the other.
modified: 20240929013841713
parent: Macros, Wikification, and Widgets
tags: Section
title: Templates vs. Procedures vs. Macros vs. Custom Widgets
type: text/vnd.tiddlywiki

Templates and macros can both be used to include some content in multiple places. (We haven't seen how to create [[global macros|Global Macros]] yet so we don't have to write the same macro in every tiddler we use it in, but we'll get there soon. If you're curious, you can jump ahead now -- you know everything you need to understand that section.) For instance, in the [[exercise|Ex:CreateMeetingTemplate]] where we created a template that showed a table of the fields on a meeting, we could just as well have written a macro:

```html
\define meetingTemplate()
| !Time|{{!!at}}|
| !Participants|{{!!participants}}|
\end
```

For the most part, this is personal preference and a question of what makes the most sense semantically (that is, the two methods have the same effect, but one might be easier for a person to read and understand). Here are some points that might help you to decide between using a template and a macro:

<ul>
<li>If you need to ''include the same snippet multiple times with different data'' in a single tiddler, a macro is likely easier since you can pass it parameters.</li>
<li>On the other hand, if you want to ''transclude a bunch of different tiddlers into one place using the same formatting'', a template is likely easier.<ul>
<li>For instance, this book stores each exercise in a tiddler and uses an `ExerciseTemplate` to format each exercise; where the exercises appear, it simply says, e.g., `{{Ex:CreateMeetingTemplate||ExerciseTemplate}}` for each exercise.</li>
</ul></li>
<li>If you ''want to use [[text substitution|Text Substitution]]'', a macro is your only option.
  <ul><li>But you can always include a macro //in// a template if you need to use text substitution.</li></ul></li>
<li>Templates work best using ''fields of a particular tiddler'' as input. Macros work best using ''parameters written directly inside the body of the tiddler'' as input. However, either can get data from either source if you set a variable to the appropriate value:

```html
<$let
	myvar1="xyz"
	myvar2={{!!field}}
>
  {{||MyTemplate}}
  <<myMacro>>
</$let>
```

<p>In `MyTemplate`, a reference to `<<myvar1>>` will get the value `xyz`, while in `myMacro`, `<<myvar1>>` or `$(myvar1)$` will get the value `xyz`. Similarly with `myvar2` getting the value of `field` on the current tiddler.</p>

<p>With a macro, you can also use the `$macrocall` widget to pass field values as parameters.</p>
</li>
</ul>

!! Takeaways

{{||TakeawaysTemplate}}
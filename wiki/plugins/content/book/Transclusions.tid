created: 20200530170328830
description: Transclusions are like variables, but their value is stored in a field of a tiddler.
modified: 20240928024625995
parent: Variables, Procedures, and Transclusions
tags: Section Concept
title: Transclusions
type: text/vnd.tiddlywiki

''Field transclusions'' are much like [[variable references|Variables]] or [[procedure calls|Procedures]], but their value comes from another tiddler in your wiki rather than a `$let` widget or a procedure definition.

Specifically, a field transclusion, as its name suggests, retrieves ''the contents of a particular field of a tiddler''. If we write `{{JaneDoe!!phone}}`, the contents of the `phone` field of the JaneDoe tiddler -- namely, Jane's phone number -- will appear in the output. Let's start a tiddler called `PhoneNumbers` in our example wiki and try that:

```html
* JaneDoe -- {{JaneDoe!!phone}}
```

You should see:

* JaneDoe -- 888-555-1234

Either the left or the right side of the reference can be left off. Just `{{JaneDoe}}` refers to the `text` field of the `JaneDoe` tiddler, while just `{{!!phone}}` refers to the `phone` field of the current tiddler.

As soon as you update a field of a tiddler, any open tiddlers or parts of the interface that transclude that field will be automatically re-rendered -- just like with the results of a filter, or the formulas in a spreadsheet. Because of the [[draft mechanism|Browsing Your Tiddlers]], though, if you're editing a tiddler within the story river, you have to save that tiddler before the changes appear â€“ while you edit a tiddler in the story river, you're not actually editing that tiddler itself, but rather a draft copy of it, and your changes only go into the actual tiddler when you save.

Just like you can use the value of a variable or the result of a procedure call as an attribute of a widget, you can use the value of a field transclusion as an attribute of a widget. For example, suppose we had a field on the current tiddler called `wikipedia-reference` that contained the name of a Wikipedia article it was based on, and we wanted to create a link to it using the `wikipediaLink` macro:

```html
<$transclude $variable="wikipediaLink" article={{!!wikipedia-reference}} />
```

Notice the similarity in form between the three wikitext methods we've encountered for referring to other content:

* `[[double square brackets]]` -- to link to content
* `<<double angle brackets>>` -- to get content from a variable or procedure
* `{{double curly braces}}` -- to get content from a tiddler field

Directly including entire tiddlers within other tiddlers, like `{{My Other Tiddler}}`, is uncommon in most wikis; linking is usually a more useful way of relating ideas. However, transclusion is invaluable in combination with filters for creating dynamic lists, tables, and other content. In fact, the whole interface of TiddlyWiki is actually created by transcluding a bunch of special tiddlers! Transclusion becomes even more useful once you understand //templates//, which we'll cover in the [[next section|Templates and the Current Tiddler]].

!! A note on terminology

Technically, the form `<<double angle brackets>>` is //also// a transclusion -- a ''variable transclusion'' or ''procedure transclusion''. In the document-management-systems world, //transclusion// means including some other document or content at the location of the reference, and procedures and plain old variables do this just like field transclusions do.

However, in non-technical contexts, people often use the term //transclusion// by itself to refer specifically to a field transclusion. We will try to explicitly state what kind of transclusion we mean if it might be unclear, but in the remainder of this book, you should read //transclusion// without a modifier as //field transclusion//.

!! The `$transclude` widget

In the previous section, [[The Finer Points of Procedures]] we mentioned that you can use the `$transclude` widget with the `$variable` parameter to call a procedure (transclude the value of the procedure/variable). You can use the `$transclude` widget to do field transclusion as well, using its `$tiddler` and `$field` parameters. {{Ltc:BracesTranscludeSame||LieToChildrenTemplate}}:

```html
* {{JaneDoe!!phone}}
* <$transclude $tiddler="JaneDoe" $field="phone"/>
```

As with the `{{curly braces syntax}}`, `$tiddler` defaults to the current tiddler and `$field` defaults to `text`.


!! Exercises

{{Ex:JaneDataTransclusion||ExerciseTemplate}}
{{Ex:FudgeTransclusion||ExerciseTemplate}}
{{Ex:SearchingInTransclusions||ExerciseTemplate}}
{{Ex:LinkingInTransclusions||ExerciseTemplate}}
{{Ex:MultipleTransclusion||ExerciseTemplate}}
{{Ex:SelfTransclusion||ExerciseTemplate}}
{{Ex:CircularTransclusion||ExerciseTemplate}}
{{Ex:JaneManagerPhone||ExerciseTemplate}}
{{Ex:VariableTransclusion||ExerciseTemplate}}


!! Takeaways

{{||TakeawaysTemplate}}